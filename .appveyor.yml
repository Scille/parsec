skip_tags: true

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

os: Visual Studio 2015

services:
  - postgresql96

environment:
  PGINSTALLATION: C:\Program Files\PostgreSQL\9.6\bin

  matrix:
    # Disable 32 bits tests for the moment
    # - PYTHON: C:\Python36
    - PYTHON: C:\Python36-x64

build_script:
  # PostgreSQL
  - PATH=C:\Program Files\PostgreSQL\9.6\bin\;%PATH%
  - which pg_config
  - pg_config --version

  # Winfsp
  - choco install winfsp -y --pre --version=1.7.20038-pre

  # Winfsp-tests
  - appveyor DownloadFile https://github.com/billziss-gh/winfsp/releases/download/v1.5/winfsp-tests-1.5.20002.zip -FileName %PYTHON%\Scripts\winfsp-tests.zip
  - 7z x %PYTHON%\Scripts\winfsp-tests.zip -o%PYTHON%\Scripts\

  # Information
  - git --no-pager log -n2
  - echo %APPVEYOR_REPO_COMMIT%

  # Python
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;;%PATH%
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  - python misc/releaser.py check

  # Build and install wheel
  - pip install -U wheel
  - python setup.py bdist_wheel
  # TODO: insert a sarcastic comment about lacking wildcard support, powershell
  # treating stderr output as error, impossibility to set variable from command
  # output and how unjustified windows crazinesses waste my time in general
  - python -c "import os, glob; cmd = 'pip install {}[core,backend,dev]'.format(glob.glob('dist/parsec_cloud-*.whl')[0]); print(cmd); raise SystemExit(os.system(cmd))"

test_script:
  # Uncomment this for RDP debug
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - mkdir empty
  - cd empty
  # No sed ? Hold my beer !
  - python -c "from pathlib import Path; fd = Path('../setup.cfg'); fd.write_text(fd.read_text().replace('parsec/core/gui/*', 'parsec/core/gui/*,../parsec/core/gui/*'))"
  - set PYTEST_OPTS=--log-level=DEBUG -vvv -x --cov=parsec --cov-config=../setup.cfg --cov-append

  # Run basic tests
  - py.test ../tests/ %PYTEST_OPTS%
  # Run mountpoint tests without parallelism
  - py.test ../tests/ -m mountpoint --runmountpoint --runslow %PYTEST_OPTS%
  # Run gui tests without parallelism
  - py.test ../tests/ -m gui --runmountpoint --runslow --rungui %PYTEST_OPTS%
  # Run backend tests with parallelism postgresql driver
  - py.test ../tests/backend ../tests/test_cli.py --postgresql --runslow -n 2 --max-worker-restart=0 %PYTEST_OPTS%
  # Run slow tests with parallelism with memory driver
  - py.test ../tests/ -m slow --runslow -n 2 --max-worker-restart=0 %PYTEST_OPTS%


on_success:
  - pip install -U --user codecov
  - python -m codecov
